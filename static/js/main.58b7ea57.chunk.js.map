{"version":3,"sources":["components/Header.js","contexts/AppReducer.js","contexts/TransactionContext.js","components/Balance.js","components/TotalsExpense.js","components/TransactionItem.js","components/TransactionList.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","className","Brand","href","Toggle","Collapse","Text","state","action","type","transactions","filter","item","id","payload","initialState","TransactionContext","createContext","TransactionProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","transaction","Balance","totalSum","useContext","map","amount","reduce","acc","elem","toFixed","Container","Row","TotalsExpense","amounts","income","expense","Card","Body","Title","Math","abs","TransactionItem","props","sign","listItem","text","onClick","TransactionList","context","console","log","AddTransaction","useState","setText","setAmount","Form","onSubmit","e","preventDefault","newTransaction","uuidv4","parseInt","Group","controlId","Label","Control","onChange","target","placeholder","Button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAeeA,EAZA,WACX,OACI,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,UAAU,OAA3C,UACI,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,oCACA,cAACL,EAAA,EAAOM,OAAR,IACA,cAACN,EAAA,EAAOO,SAAR,CAAiBJ,UAAU,sBAA3B,SACI,cAACH,EAAA,EAAOQ,KAAR,mD,wCCTD,WAACC,EAAOC,GACnB,OAAOA,EAAOC,MACV,IAAK,qBACD,OAAO,2BAEAF,GAFP,IAIIG,aAAcH,EAAMG,aAAaC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOL,EAAOM,aAE3E,IAAK,kBACD,OAAO,2BACAP,GADP,IAEIG,aAAa,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,iBAEhD,QACI,OAAOH,ICXbQ,EAAe,CACjBL,aAAc,IAILM,EAAqBC,wBAAcF,GAInCG,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACvBC,qBAAWC,EAAYN,GADA,mBAC1CR,EAD0C,KACnCe,EADmC,KAoBjD,OAEI,aADA,CACCN,EAAmBO,SAApB,CAA6BC,MAAO,CAAEd,aAAcH,EAAMG,aAAce,kBAjB5E,SAA2BZ,GACvBS,EAAS,CACLb,KAAM,qBACNK,QAASD,KAc8Ea,eAV/F,SAAwBC,GACpBL,EAAS,CACLb,KAAM,kBACNK,QAASa,MAOb,SACMR,KCXCS,EArBC,WAAM,IAMZC,EAJmBC,qBAAWd,GAA5BN,aAEsBqB,KAAI,SAAAnB,GAAI,OAAIA,EAAKoB,UAErBC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAE1E,OAEI,eAACC,EAAA,EAAD,CAAWpC,UAAU,OAArB,UACI,cAACqC,EAAA,EAAD,CAAKrC,UAAU,yBAAf,SACI,mDAEJ,cAACqC,EAAA,EAAD,CAAKrC,UAAU,yBAAf,SACI,mCAAM4B,W,QC4BPU,EA3CO,WAAM,IAIlBC,EAFmBV,qBAAWd,GAA5BN,aAEqBqB,KAAI,SAAAnB,GAAI,OAAIA,EAAKoB,UAExCS,EAASD,EACV7B,QAAO,SAAAC,GAAI,OAAIA,EAAO,KACtBqB,QAAO,SAACC,EAAKtB,GAAN,OAAgBsB,EAAOtB,IAAO,GACrCwB,QAAQ,GAEPM,EAAUF,EACX7B,QAAO,SAAAC,GAAI,OAAIA,EAAO,KACtBqB,QAAO,SAACC,EAAKtB,GAAN,OAAgBsB,EAAOtB,IAAO,GACrCwB,QAAQ,GAEb,OACI,cAACC,EAAA,EAAD,CAAWpC,UAAU,GAArB,SACI,eAACqC,EAAA,EAAD,CAAKrC,UAAU,yBAAf,UACI,eAAC0C,EAAA,EAAD,CAAM1C,UAAU,cAAhB,UACI,cAAC0C,EAAA,EAAK9C,OAAN,CAAaI,UAAU,eAAvB,oBACA,eAAC0C,EAAA,EAAKC,KAAN,WACI,cAACD,EAAA,EAAKE,MAAN,oBACA,eAACF,EAAA,EAAKrC,KAAN,iBACQmC,WAKhB,eAACE,EAAA,EAAD,CAAM1C,UAAU,UAAhB,UACI,cAAC0C,EAAA,EAAK9C,OAAN,CAAaI,UAAU,gBAAvB,qBACA,eAAC0C,EAAA,EAAKC,KAAN,WACI,cAACD,EAAA,EAAKE,MAAN,yBACA,eAACF,EAAA,EAAKrC,KAAN,iBACQwC,KAAKC,IAAIL,kBCnC5BM,EAAkB,SAACC,GAAW,IAC/BxB,EAAsBK,qBAAWd,GAAjCS,kBACFyB,EAAOD,EAAME,SAASnB,OAAS,EAAI,IAAM,IAE/C,OACI,qBAAI/B,UAAU,OAAd,UAAsBgD,EAAME,SAASC,KAArC,MAA6C,iCAAOF,EAAP,KAAeJ,KAAKC,IAAIE,EAAME,SAASnB,WAChF,wBACI/B,UAAU,sBACVoD,QAAU,kBAAM5B,EAAkBwB,EAAME,SAAStC,KAFrD,mBCkBGyC,G,MApBS,WACpB,IAAMC,EAAUzB,qBAAWd,GAI3B,OAFAwC,QAAQC,IAAIF,GAGR,eAAClB,EAAA,EAAD,CAAWpC,UAAU,OAArB,UACI,cAACqC,EAAA,EAAD,CAAKrC,UAAU,yBAAf,SACI,uDAEJ,cAACqC,EAAA,EAAD,CAAKrC,UAAU,yBAAf,SACI,oBAAIA,UAAU,UAAd,SACKsD,EAAQ7C,aAAaqB,KAAK,SAAAnB,GAAI,OAC3B,cAAC,EAAD,CAA+BuC,SAAUvC,GAAnBA,EAAKC,gB,wBCmCpC6C,EA/CQ,WAAM,MAEDC,mBAAS,IAFR,mBAElBP,EAFkB,KAEZQ,EAFY,OAGGD,mBAAS,GAHZ,mBAGlB3B,EAHkB,KAGV6B,EAHU,KAKjBnC,EAAmBI,qBAAWd,GAA9BU,eAoBR,OACI,cAACW,EAAA,EAAD,CAAWpC,UAAU,WAArB,SACI,cAACqC,EAAA,EAAD,CAAKrC,UAAU,yBAAf,SACI,cAAC0C,EAAA,EAAD,CAAM1C,UAAU,+BAAhB,SACI,eAAC6D,EAAA,EAAD,CAAMC,SArBL,SAAAC,GACbA,EAAEC,iBACFT,QAAQC,IAAI,8BACZ,IAAIS,EAAiB,CACjBrD,GAAIsD,cACJf,KAAMA,EACNpB,OAAQoC,SAASpC,IAGrBwB,QAAQC,IAAIS,GACZxC,EAAewC,GAGfN,EAAQ,IACRC,EAAU,KAOE,UACI,eAACC,EAAA,EAAKO,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACR,EAAA,EAAKS,MAAN,0BAEA,cAACT,EAAA,EAAKU,QAAN,CAAc/D,KAAK,OAAOI,GAAG,OAAOW,MAAO4B,EAAMqB,SAAW,SAACT,GAAD,OAAOJ,EAAQI,EAAEU,OAAOlD,QAASmD,YAAY,qCAE7G,eAACb,EAAA,EAAKO,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACR,EAAA,EAAKS,MAAN,qBACA,cAACT,EAAA,EAAKU,QAAN,CAAc/D,KAAK,SAASI,GAAG,SAASW,MAAOQ,EAAQyC,SAAW,SAACT,GAAD,OAAOH,EAAUG,EAAEU,OAAOlD,QAASmD,YAAY,oBAErH,cAACC,EAAA,EAAD,CAAQ5E,QAAQ,UAAUS,KAAK,SAA/B,8B,MCjBToE,MAhBf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACE,cAACxC,EAAA,EAAD,UACE,sBAAKpC,UAAU,kBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,aCXG6E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.58b7ea57.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nconst Header = () => {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-5\">\n            <Navbar.Brand href=\"#home\">React Expense Tracker </Navbar.Brand>\n            <Navbar.Toggle />\n            <Navbar.Collapse className=\"justify-content-end\">\n                <Navbar.Text>utilizing Hooks and ContextAPI</Navbar.Text>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default Header;\n","export default (state, action) => {\n    switch(action.type) {\n        case 'DELETE_TRANSACTION':\n            return {\n                // copy current value of STATE object\n                ...state,\n                // create new 'transactions' array by filtering out the PAYLOAD that is passed to the deleteTransaction ACTION function (DISPATCH functionality) \n                transactions: state.transactions.filter(item => item.id !== action.payload)\n            }\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                transactions: [action.payload, ...state.transactions]\n            }\n        default:\n            return state;\n    }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial State\nconst initialState = {\n    transactions: []\n}\n\n// Create Context\nexport const TransactionContext = createContext(initialState);\n\n\n// Provider Context\nexport const TransactionProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    // -- Define ACTIONS -- //\n    // DELETE Transaction\n    function deleteTransaction(id) {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        })\n    }\n    // ADD Transaction\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        })\n    }\n\n\n    return (\n        // Make our STATE (context) and METHODS available to the nested COMPONENTS in our application\n        <TransactionContext.Provider value={{ transactions: state.transactions, deleteTransaction, addTransaction}}> \n            { children }\n        </TransactionContext.Provider>\n    )\n}","import React, { useContext } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport { TransactionContext } from '../contexts/TransactionContext';\n\nconst Balance = () => {\n    // Bring in Context\n    const { transactions } = useContext(TransactionContext);\n    // Create an ARRAY of all amounts\n    const sumArray = transactions.map(item => item.amount);\n    // Sum the total amount from all transactions\n    const totalSum = sumArray.reduce((acc, elem) => (acc += elem), 0).toFixed(2);\n\n    return (\n\n        <Container className=\"mb-3\">\n            <Row className=\"justify-content-center\">\n                <h4>Current Balance</h4>\n            </Row>\n            <Row className=\"justify-content-center\">\n                <h4>${totalSum}</h4>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Balance;\n","import React, { useContext } from 'react';\nimport { Container, Row, Card } from 'react-bootstrap';\nimport { TransactionContext } from '../contexts/TransactionContext';\n\nconst TotalsExpense = () => {\n    // Bring in Context\n    const { transactions } = useContext(TransactionContext);\n    // Create Array containing all transaction amounts\n    const amounts = transactions.map(item => item.amount);\n    // Filter positive transaction amounts and sum them together\n    const income = amounts\n        .filter(item => item > 0)\n        .reduce((acc, item) => (acc += item), 0)\n        .toFixed(2);\n    // Filter negative transaction amounts and sum them together\n    const expense = amounts \n        .filter(item => item < 0)\n        .reduce((acc, item) => (acc += item), 0)\n        .toFixed(2);\n\n    return (\n        <Container className=\"\">\n            <Row className=\"justify-content-center\">\n                <Card className='mr-2 income'>\n                    <Card.Header className=\"income-title\">Income</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Added</Card.Title>\n                        <Card.Text>\n                            + ${income}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n\n                <Card className=\"expense\">\n                    <Card.Header className=\"expense-title\">Expense</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Subtracted</Card.Title>\n                        <Card.Text>\n                            - ${Math.abs(expense)}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Row>\n        </Container>\n    )\n}\n\nexport default TotalsExpense\n","import React, { useContext } from 'react';\nimport { TransactionContext } from '../contexts/TransactionContext';\n\nexport const TransactionItem = (props) => {\n    const { deleteTransaction } = useContext(TransactionContext);\n    const sign = props.listItem.amount > 0 ? \"+\" : \"-\";\n\n    return (\n        <li className=\"mt-3\">{props.listItem.text} : <span>{sign} ${Math.abs(props.listItem.amount)}</span>\n            <button \n                className=\"btn btn-danger ml-3\"\n                onClick={ () => deleteTransaction(props.listItem.id) }>X</button>\n        </li>\n    )\n}\n\n","import React, { useContext } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport { TransactionContext } from '../contexts/TransactionContext';\nimport { TransactionItem } from './TransactionItem';\n\nimport './styles.css';\n\nconst TransactionList = () => {\n    const context = useContext(TransactionContext);\n    // -- TESTING -- //\n    console.log(context);\n\n    return (\n        <Container className=\"mt-3\">\n            <Row className=\"justify-content-center\">\n                <h5>Transaction History</h5>\n            </Row>\n            <Row className=\"justify-content-center\"> \n                <ul className=\"history\">\n                    {context.transactions.map( item => (\n                        <TransactionItem key={item.id} listItem={item} />))}\n                </ul>\n            </Row>\n        </Container>\n    )\n}\n\nexport default TransactionList;\n","import React, { useState, useContext } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport { TransactionContext } from '../contexts/TransactionContext';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './styles.css';\n\nconst AddTransaction = () => {\n    // Setup useState hooks\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n    // Bring in our CONTEXT\n    const { addTransaction } = useContext(TransactionContext);\n\n    // Define our onSubmit method logic\n    const onSubmit = e => {\n        e.preventDefault();\n        console.log(\"Submitting new transaction\");\n        let newTransaction = {\n            id: uuidv4(),\n            text: text,\n            amount: parseInt(amount)\n        }\n\n        console.log(newTransaction);\n        addTransaction(newTransaction);\n\n        // Clear 'text' and 'amount' STATE (and form inputs)\n        setText('');\n        setAmount('');\n    } \n\n    return (\n        <Container className=\"add mt-3\">\n            <Row className=\"justify-content-center\">\n                <Card className=\"container p-3 form-container\">\n                    <Form onSubmit={onSubmit}>\n                        <Form.Group controlId=\"formGroupEmail\">\n                            <Form.Label>Description</Form.Label>\n                            { /* added associated value hooks and onChange handlers to inputs */ }\n                            <Form.Control type=\"text\" id=\"text\" value={text} onChange={ (e) => setText(e.target.value) } placeholder=\"Enter Transaction Description\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"formGroupEmail\">\n                            <Form.Label>Amount</Form.Label>\n                            <Form.Control type=\"number\" id=\"amount\" value={amount} onChange={ (e) => setAmount(e.target.value) } placeholder=\"Enter Amount\" />\n                        </Form.Group>\n                        <Button variant=\"success\" type=\"submit\">Submit</Button>\n                    </Form>\n                </Card>\n            </Row>\n        </Container>\n    )\n}\n\nexport default AddTransaction;\n","import React from 'react';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport TotalsExpense from './components/TotalsExpense';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\n\n// Import Context Provider\nimport { TransactionProvider } from './contexts/TransactionContext';\n\nimport { Container } from 'react-bootstrap';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <TransactionProvider>\n      <Header />\n        <Container>\n          <div className=\"content-wrapper\">\n            <Balance />\n            <TotalsExpense />\n            <TransactionList />\n            <AddTransaction />\n          </div>\n        </Container>\n    </TransactionProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// CSS Imports\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}