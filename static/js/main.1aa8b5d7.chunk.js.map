{"version":3,"sources":["components/Header.js","contexts/AppReducer.js","contexts/TransactionContext.js","components/Balance.js","components/TotalsExpense.js","components/TransactionItem.js","components/TransactionList.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","state","action","type","transactions","filter","item","id","payload","initialState","text","amount","TransactionContext","createContext","TransactionProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","transaction","Balance","totalSum","useContext","map","reduce","acc","elem","toFixed","TotalsExpense","amounts","income","expense","Card","Body","Title","Text","Math","abs","TransactionItem","props","sign","listItem","onClick","TransactionList","context","console","log","AddTransaction","useState","setText","setAmount","Form","onSubmit","e","preventDefault","newTransaction","uuidv4","parseInt","Group","controlId","Label","Control","onChange","target","placeholder","Button","variant","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aa8b5d7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (\n        <div className=\"container mt-5\">\n            <h2>React Expense Tracker utilzing Hooks and ContextAPI</h2>\n        </div>\n    )\n}\n\nexport default Header;\n","export default (state, action) => {\n    switch(action.type) {\n        case 'DELETE_TRANSACTION':\n            return {\n                // copy current value of STATE object\n                ...state,\n                // create new 'transactions' array by filtering out the PAYLOAD that is passed to the deleteTransaction ACTION function (DISPATCH functionality) \n                transactions: state.transactions.filter(item => item.id !== action.payload)\n            }\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                transactions: [action.payload, ...state.transactions]\n            }\n        default:\n            return state;\n    }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial State\nconst initialState = {\n    transactions: [\n        { id: 1, text: 'Direct Deposit', amount: 250 },\n        { id: 2, text: 'Booze', amount: -50 },\n        { id: 3, text: 'Takeout', amount: -40 }\n    ]\n}\n\n// Create Context\nexport const TransactionContext = createContext(initialState);\n\n\n// Provider Context\nexport const TransactionProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    // -- Define ACTIONS -- //\n    // DELETE Transaction\n    function deleteTransaction(id) {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        })\n    }\n    // ADD Transaction\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        })\n    }\n\n\n    return (\n        // Make our STATE (context) and METHODS available to the nested COMPONENTS in our application\n        <TransactionContext.Provider value={{ transactions: state.transactions, deleteTransaction, addTransaction}}> \n            { children }\n        </TransactionContext.Provider>\n    )\n}","import React, { useContext } from 'react';\nimport { TransactionContext } from '../contexts/TransactionContext';\n\nconst Balance = () => {\n    // Bring in Context\n    const { transactions } = useContext(TransactionContext);\n    // Create an ARRAY of all amounts\n    const sumArray = transactions.map(item => item.amount);\n    // Sum the total amount from all transactions\n    const totalSum = sumArray.reduce((acc, elem) => (acc += elem), 0).toFixed(2);\n\n    return (\n        <div className=\"container\">\n            <h4>Current Balance</h4>\n            <h4>${totalSum}</h4>\n        </div>\n    )\n}\n\nexport default Balance;\n","import React, { useContext } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { TransactionContext } from '../contexts/TransactionContext';\n\nconst TotalsExpense = () => {\n    // Bring in Context\n    const { transactions } = useContext(TransactionContext);\n    // Create Array containing all transaction amounts\n    const amounts = transactions.map(item => item.amount);\n    // Filter positive transaction amounts and sum them together\n    const income = amounts\n        .filter(item => item > 0)\n        .reduce((acc, item) => (acc += item), 0)\n        .toFixed(2);\n    // Filter negative transaction amounts and sum them together\n    const expense = amounts \n        .filter(item => item < 0)\n        .reduce((acc, item) => (acc += item), 0)\n        .toFixed(2);\n\n    return (\n        <div className=\"container justify-content-center mt-4\">\n            <div className=\"row justify-content-center\">\n                <Card className='mr-2'>\n                    <Card.Header>Income</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Added</Card.Title>\n                        <Card.Text>\n                        + ${income}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n\n                <Card>\n                    <Card.Header>Expense</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Subtracted</Card.Title>\n                        <Card.Text>\n                        - ${Math.abs(expense)}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n        </div>\n    )\n}\n\nexport default TotalsExpense\n","import React, { useContext } from 'react';\nimport { TransactionContext } from '../contexts/TransactionContext';\n\nexport const TransactionItem = (props) => {\n    const { deleteTransaction } = useContext(TransactionContext);\n    const sign = props.listItem.amount > 0 ? \"+\" : \"-\";\n\n    return (\n        <li className=\"mt-3\">{props.listItem.text} : <span>{sign} ${Math.abs(props.listItem.amount)}</span>\n            <button \n                className=\"btn btn-danger ml-3\"\n                onClick={ () => deleteTransaction(props.listItem.id) }>X</button>\n        </li>\n    )\n}\n\n\n// export default TransactionItem;","import React, { useContext } from 'react';\nimport { TransactionContext } from '../contexts/TransactionContext';\nimport { TransactionItem } from './TransactionItem';\n\nconst TransactionList = () => {\n    const context = useContext(TransactionContext);\n    // -- TESTING -- //\n    console.log(context);\n\n    return (\n        <div className=\"container mt-3\">\n            <h3>Transaction History</h3>\n            <ul className=\"history\">\n                {context.transactions.map( item => (\n                    <TransactionItem key={item.id} listItem={item} />))}\n            </ul>\n        </div>\n    )\n}\n\nexport default TransactionList;\n","import React, { useState, useContext } from 'react';\nimport { TransactionContext } from '../contexts/TransactionContext';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst AddTransaction = () => {\n    // Setup useState hooks\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n    // Bring in our CONTEXT\n    const { addTransaction } = useContext(TransactionContext);\n\n    // Define our onSubmit method logic\n    const onSubmit = e => {\n        e.preventDefault();\n        console.log(\"Submitting new transaction\");\n        let newTransaction = {\n            id: uuidv4(),\n            text: text,\n            amount: parseInt(amount)\n        }\n\n        console.log(newTransaction);\n        addTransaction(newTransaction);\n\n        // Clear 'text' and 'amount' STATE (and form inputs)\n        setText('');\n        setAmount('');\n    } \n\n    return (\n        <div className=\"container mt-3\">\n            <Card className=\"container p-3\">\n                <Form onSubmit={onSubmit}>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label>Description</Form.Label>\n                        { /* added associated value hooks and onChange handlers to inputs */ }\n                        <Form.Control type=\"text\" id=\"text\" value={text} onChange={ (e) => setText(e.target.value) } placeholder=\"Enter Transaction Description\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label>Amount</Form.Label>\n                        <Form.Control type=\"number\" id=\"amount\" value={amount} onChange={ (e) => setAmount(e.target.value) } placeholder=\"Enter Amount\" />\n                    </Form.Group>\n                    <Button variant=\"success\" type=\"submit\">Submit</Button>\n                </Form>\n            </Card>\n        </div>\n    )\n}\n\nexport default AddTransaction;\n","import React from 'react';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport TotalsExpense from './components/TotalsExpense';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\n\n// Import Context Provider\nimport { TransactionProvider } from './contexts/TransactionContext';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <TransactionProvider>\n      <Header />\n      <Balance />\n      <TotalsExpense />\n      <TransactionList />\n      <AddTransaction />\n    </TransactionProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// CSS Imports\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}